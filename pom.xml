<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>
  <modules>
    <module>eureka-server</module>
    <module>config-server</module>
  </modules>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.4.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.quec1994</groupId>
  <artifactId>spring-cloud-example</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>spring-cloud-example</name>
  <description>Demo project for Spring Boot</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <spring-cloud.version>Greenwich.SR1</spring-cloud.version>

    <docker.image.prefix>spring-cloud-example</docker.image.prefix>
    <docker.maintainer>qyz12321@163.com</docker.maintainer>
    <docker.description>Spring Cloud 例子</docker.description>
    <docker.exposes>8080</docker.exposes>
    <docker.workdir>/opt/cloud</docker.workdir>
    <docker.volumes>/opt/cloud/logs</docker.volumes>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    <!--		<dependency>-->
    <!--			<groupId>org.springframework.cloud</groupId>-->
    <!--			<artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>-->
    <!--		</dependency>-->
    <!--		<dependency>-->
    <!--			<groupId>org.springframework.cloud</groupId>-->
    <!--			<artifactId>spring-cloud-starter-netflix-turbine</artifactId>-->
    <!--		</dependency>-->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!-- defined in spring-cloud-starter-parent pom (as documentation hint),
          but needs to be repeated here -->
        <configuration>
          <requiresUnpack>
            <dependency>
              <groupId>com.netflix.eureka</groupId>
              <artifactId>eureka-core</artifactId>
            </dependency>
            <dependency>
              <groupId>com.netflix.eureka</groupId>
              <artifactId>eureka-client</artifactId>
            </dependency>
          </requiresUnpack>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.2.0</version>
        <configuration>
          <!-- serverId要配合maven的setting.xml使用  -->
          <!--          <serverId>docker-hub</serverId>-->
          <!--          <registryUrl>https://10.10.6.50:5000</registryUrl>-->
          <!--          <dockerCertPath>C:\Users\admin\.docker\machine\machines\manager</dockerCertPath>-->
          <!-- docker远程服务器地址 -->
          <dockerHost>http://192.168.195.128:2375</dockerHost>
          <!-- 镜像名称  -->
          <!--          <imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
          <imageName>${project.artifactId}</imageName>
          <imageTags>${project.version}</imageTags>
          <baseImage>openjdk:8-jre-alpine</baseImage>
          <maintainer>${docker.maintainer}</maintainer>
          <labels>${docker.description}</labels>
          <exposes>${docker.exposes}</exposes>
          <!-- 创建一个数据卷挂载点，主机上对应的目录是自动生成的，无法指定 -->
          <volumes>
            <volume>${docker.volumes}</volume>
          </volumes>
          <!-- 设置容器默认工作目录 -->
          <workdir>${docker.workdir}</workdir>
          <entryPoint>
            ["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "./${project.build.finalName}.jar"]
          </entryPoint>
          <resources>
            <resource>
              <targetPath>${docker.workdir}</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
